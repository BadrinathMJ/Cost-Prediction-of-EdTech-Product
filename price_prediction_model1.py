# -*- coding: utf-8 -*-
"""Price_Prediction_Final_VScode.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Hm4u19Jd38F4Q1MxinQPuN7dTyDbjK1x
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

#from google.colab import drive
#drive.mount('/content/drive')

data = pd.read_csv(r"F:\360 Classes\360 DigitMg Chatbot Project\Price Prediction\price_data.csv")

data.head()

data.shape

data.columns

data.info()

data.describe()

from sklearn.preprocessing import LabelEncoder
# creating instance of labelencoder
labelencoder = LabelEncoder()

# Data Split into Input and Output variables
X = data.drop(['price'],axis=1)

y = data['price']

X

y

X['sr_no']= labelencoder.fit_transform(X['sr_no'])
X['institute_name']= labelencoder.fit_transform(X['institute_name'])
X['course_title']= labelencoder.fit_transform(X['course_title'])
X['course_length']= labelencoder.fit_transform(X['course_length'])
X['trainer_salary']= labelencoder.fit_transform(X['trainer_salary'])
X['enrollment']= labelencoder.fit_transform(X['enrollment'])
X['study_material']= labelencoder.fit_transform(X['study_material'])
X['office_rent']= labelencoder.fit_transform(X['office_rent'])
X['infrastructure_cost']= labelencoder.fit_transform(X['infrastructure_cost'])
X['electricity']= labelencoder.fit_transform(X['electricity'])
X['daily_expenses']= labelencoder.fit_transform(X['daily_expenses'])
X['marketing_expenses']= labelencoder.fit_transform(X['marketing_expenses'])
X['placement']= labelencoder.fit_transform(X['placement'])
X['miscellanous']= labelencoder.fit_transform(X['miscellanous'])
X['enrollment_due_to_brand']= labelencoder.fit_transform(X['enrollment_due_to_brand'])

### label encode y ###
y = labelencoder.fit_transform(y)
y = pd.DataFrame(y)

### we have to convert y to data frame so that we can use concatenate function
# concatenate X and y
df_new = pd.concat([X, y], axis =1)
df_new

## rename column name
df_new.columns
df_new = df_new.rename(columns={0:'price'})
df_new.info()

df_new.columns
df_new.drop(['institute_name','course_title','placement','course_length','study_material','miscellanous','marketing_expenses','daily_expenses','electricity'], axis = 1, inplace = True)
df_new.info()
df_new.shape

X = df_new.iloc[:,:6]
y = df_new.iloc[:,-1]

X

y

from sklearn.linear_model import LinearRegression
regressor = LinearRegression()

### Fitting Model Data with Training Data
regressor.fit(X, y)

import pickle

### Create a Pickle file using serialization 
import pickle
pickle_out = open("regressor2.pkl","wb")
pickle.dump(regressor, pickle_out)
pickle_out.close()

